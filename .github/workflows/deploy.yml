name: Deploy to Sakura Internet

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        
    - name: Validate PHP syntax
      run: |
        find . -name "*.php" -exec php -l {} \;
        
    - name: Install rsync and sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y rsync sshpass
        
    - name: Deploy to Sakura Internet
      run: |
        rsync -avz --delete \
          --exclude='.git/' \
          --exclude='.github/' \
          --exclude='node_modules/' \
          --exclude='test/' \
          --exclude='tests/' \
          --exclude='backups/' \
          --exclude='logs/' \
          --exclude='.env' \
          --exclude='.env.*' \
          --exclude='.DS_Store' \
          --exclude='Thumbs.db' \
          --exclude='*.log' \
          --exclude='.last_update' \
          --exclude='.backup_status' \
          --exclude='README.md' \
          --exclude='DEPLOYMENT.md' \
          --exclude='GITHUB_SECRETS.md' \
          --exclude='scripts/' \
          --exclude='*.key' \
          --exclude='*.pem' \
          --exclude='*.p12' \
          --exclude='config.local.php' \
          --exclude='vendor/' \
          --exclude='composer.lock' \
          --exclude='package-lock.json' \
          --exclude='yarn.lock' \
          --exclude='.vscode/' \
          --exclude='.idea/' \
          --exclude='*.tmp' \
          --exclude='*.temp' \
          --exclude='*.cache' \
          --exclude='cache/' \
          --exclude='tmp/' \
          --exclude='temp/' \
          -e "sshpass -p '${{ secrets.SFTP_PASSWORD }}' ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10" \
          ./ \
          ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/mokumoku/www/persona-factory/

    - name: Set up server environment
      run: |
        sshpass -p '${{ secrets.SFTP_PASSWORD }}' ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 \
          ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'ENDSSH'
          cd /home/mokumoku/www/persona-factory
          
          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            cp .env.example .env
            echo "Created .env file from template"
          fi
          
          # Update production settings
          sed -i 's/DEBUG_MODE=true/DEBUG_MODE=false/g' .env
          sed -i 's|APP_URL=.*|APP_URL=https://mokumoku.sakura.ne.jp/persona-factory/|g' .env
          
          # Create logs directory
          mkdir -p logs
          chmod 755 logs
          
          # Set proper permissions
          find . -type f -name "*.php" -exec chmod 644 {} \;
          find . -type f -name "*.html" -exec chmod 644 {} \;
          find . -type f -name "*.css" -exec chmod 644 {} \;
          find . -type f -name "*.js" -exec chmod 644 {} \;
          find . -type f -name "*.json" -exec chmod 644 {} \;
          find . -type d -exec chmod 755 {} \;
          
          echo "Server environment setup completed"
        ENDSSH

    - name: Health Check
      run: |
        echo "Waiting for deployment to propagate..."
        sleep 10
        
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://mokumoku.sakura.ne.jp/persona-factory/ || echo "000")
        
        if [ "$HTTP_STATUS" -eq 200 ] || [ "$HTTP_STATUS" -eq 302 ]; then
          echo "✅ Application is accessible (HTTP $HTTP_STATUS)"
        else
          echo "⚠️ Health check status: HTTP $HTTP_STATUS"
          echo "This may be expected for initial deployment without API keys"
        fi

    - name: Deployment Success
      run: |
        echo "🚀 Deployment completed successfully!"
        echo "🌐 Site URL: https://mokumoku.sakura.ne.jp/persona-factory/"
        echo "⚠️ Remember to manually set API keys in the .env file on the server"
        echo "📅 Deployed at: $(date)"