name: Deploy to Sakura Internet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        
    - name: Validate PHP syntax
      run: |
        find . -name "*.php" -exec php -l {} \;
        
    - name: Create .env file
      run: |
        cp .env.example .env.production
        sed -i 's/DEBUG_MODE=true/DEBUG_MODE=false/g' .env.production
        sed -i 's|APP_URL=.*|APP_URL=https://mokumoku.sakura.ne.jp/persona-factory/|g' .env.production
        
    - name: Deploy to Sakura Internet via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./
        server-dir: /home/mokumoku/www/persona-factory/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/docs/**
          **/test/**
          **/backups/**
          **/.env
          **/.DS_Store
          **/Thumbs.db
          **/*.log
          **/logs/**
          **/.last_update
          **/.backup_status
          **/README.md
          **/DEPLOYMENT.md
          
    - name: Create production .env file on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          cd /home/mokumoku/www/persona-factory
          
          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            cp .env.example .env
            echo "Created .env file from template"
          fi
          
          # Update production settings
          sed -i 's/DEBUG_MODE=true/DEBUG_MODE=false/g' .env
          sed -i 's|APP_URL=.*|APP_URL=https://mokumoku.sakura.ne.jp/persona-factory/|g' .env
          
          # Set API keys if provided
          if [ ! -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            sed -i 's/OPENAI_API_KEY=.*/OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}/g' .env
          fi
          
          if [ ! -z "${{ secrets.CLAUDE_API_KEY }}" ]; then
            sed -i 's/CLAUDE_API_KEY=.*/CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}/g' .env
          fi
          
          if [ ! -z "${{ secrets.GEMINI_API_KEY }}" ]; then
            sed -i 's/GEMINI_API_KEY=.*/GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}/g' .env
          fi
          
          # Create logs directory
          mkdir -p logs
          chmod 755 logs
          
          # Set proper permissions
          find . -type f -name "*.php" -exec chmod 644 {} \;
          find . -type f -name "*.html" -exec chmod 644 {} \;
          find . -type f -name "*.css" -exec chmod 644 {} \;
          find . -type f -name "*.js" -exec chmod 644 {} \;
          find . -type f -name "*.json" -exec chmod 644 {} \;
          find . -type d -exec chmod 755 {} \;
          
          echo "Deployment completed successfully"
          
    - name: Health Check
      run: |
        echo "Waiting for deployment to propagate..."
        sleep 30
        
        # Check if the application is accessible
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://mokumoku.sakura.ne.jp/persona-factory/ || echo "000")
        
        if [ "$HTTP_STATUS" -eq 200 ] || [ "$HTTP_STATUS" -eq 302 ]; then
          echo "‚úÖ Application is accessible (HTTP $HTTP_STATUS)"
        else
          echo "‚ùå Application health check failed (HTTP $HTTP_STATUS)"
          exit 1
        fi
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üöÄ Deployment to https://mokumoku.sakura.ne.jp/persona-factory/ completed successfully!"
        else
          echo "‚ùå Deployment failed. Please check the logs."
        fi